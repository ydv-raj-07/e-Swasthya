import express from "express";
import fetch from "node-fetch";
import dotenv from "dotenv";
import cors from "cors";

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

// Chat endpoint (Gemini API)
app.post("/api/chat", async (req, res) => {
  const userMessage = req.body.message;

  try {
    const response = await fetch(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${process.env.GEMINI_API_KEY}`,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          contents: [
            {
              role: "user",
              parts: [{ text: userMessage }],
            },
          ],
        }),
      }
    );

    const data = await response.json();

    if (!response.ok) {
      console.error("Gemini API error:", data);
      return res
        .status(response.status)
        .json({ error: data.error?.message || "Gemini API error" });
    }

    // Extract text safely
    const aiReply =
      data?.candidates?.[0]?.content?.parts?.[0]?.text ||
      "⚠️ No response generated by Gemini.";

    res.json({ reply: aiReply });
  } catch (error) {
    console.error("Server error:", error);
    res.status(500).json({ error: "Something went wrong on the server" });
  }
});

// Debugging: log if API key is loaded
console.log("Gemini API Key loaded:", process.env.GEMINI_API_KEY?.slice(0, 7));

app.listen(5000, () => {
  console.log("✅ Server running on http://localhost:5000");
});
